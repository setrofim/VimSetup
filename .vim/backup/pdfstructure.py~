#!/usr/bin/env python
import sys
from pyPdf import PdfFileReader

def tostring(val):
    try:
        return str(val)
    except:
        return unicode(val, 'utf-8').encode('utf-8')

def print_pdf_structure(pdfobject, maxlen=20, maxdepth=10, _indent=0,  _done=[]):
    """Print out the tree structure of a PDF object."""
    if _indent >= maxdepth:
        return
    if hasattr(pdfobject, "keys"):
        for key in pdfobject.keys():
            outtext = ":".join([str(key), unicode(pdfobject[key]).encode('utf-8')])
            if len(outtext) > maxlen:
                outtext = outtext[:maxlen-3] + '.' * 3
            print "    " * _indent, outtext
            if not unicode(pdfobject[key]) in _done:
                _done.append(unicode(pdfobject[key]))
                obj = pdfobject[key].getObject()
                print_pdf_structure(obj, maxlen, maxdepth, _indent+1, _done)
    else:
        try:
            if not isinstance(pdfobject, basestring):
                for entry in pdfobject:
                    if not unicode(entry) in _done:
                        _done.append(unicode(entry))
                        print_pdf_structure(entry.getObject(), maxlen, maxdepth, _indent+1, _done)
        except TypeError: # not iterable
            pass

with open(sys.argv[1]) as fh:
    pdfdoc = PdfFileReader(fh)
    print_pdf_structure(pdfdoc.trailer)
